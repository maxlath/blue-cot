// Generated by CoffeeScript 1.11.1
(function() {
  var Cot, DbHandle, breq;

  breq = require('bluereq');

  DbHandle = require('./db_handle');

  module.exports = Cot = function(opts) {
    var auth, debug, hostname, notStandardHttpPort, notStandardHttpsPort, pass, port, protocol, ref, ssl, user;
    port = opts.port, hostname = opts.hostname, user = opts.user, pass = opts.pass, auth = opts.auth, ssl = opts.ssl, hostname = opts.hostname, debug = opts.debug;
    protocol = ssl ? 'https' : 'http';
    this.host = protocol + "://" + hostname + ":" + port;
    if (auth != null) {
      ref = auth.split(':'), user = ref[0], pass = ref[1];
    }
    this.user = user;
    this.pass = pass;
    this.hostHeader = hostname;
    notStandardHttpPort = !ssl && port !== 80;
    notStandardHttpsPort = ssl && port !== 443;
    if (notStandardHttpPort || notStandardHttpsPort) {
      this.hostHeader += ':' + port;
    }
    this.debug = debug === true;
  };

  Cot.prototype = {
    jsonRequest: function(method, path, body) {
      var bodyStr, headers, params, verb;
      headers = {
        accept: 'application/json',
        host: this.hostHeader
      };
      params = {
        url: "" + this.host + path,
        headers: headers
      };
      if (body != null) {
        headers['content-type'] = 'application/json';
        params.body = body;
      }
      if (this.debug) {
        bodyStr = JSON.stringify(body) || '';
        console.log('[cot debug] jsonRequest\n', method, params.url, bodyStr);
      }
      if ((this.user != null) && (this.pass != null)) {
        params.auth = {
          user: this.user,
          pass: this.pass
        };
      }
      verb = method.toLowerCase();
      return breq[verb](params);
    },
    db: function(name) {
      return new DbHandle(this, name);
    }
  };

}).call(this);
